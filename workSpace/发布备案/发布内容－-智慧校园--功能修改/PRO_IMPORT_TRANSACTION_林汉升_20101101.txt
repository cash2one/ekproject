CREATE OR REPLACE PROCEDURE QAXXTTEST."PRO_IMPORT_TRANSACTION" (I_SERIAL_ID        NUMBER,     --操作序号，YW_PACKAGEIMPORT_TEMP表的ID.
                                                            I_PACKAGE_ID       VARCHAR2,   --套餐ID，以逗号分隔
                                                            I_OPEN             NUMBER,     --0-取消，1-开通,2-转收费，3-收费转免费或休验    
                                                            I_CHARGE           NUMBER,     --是否收费0-休验，-1－免费，1-收费                   
                                                            I_CONFIRM          NUMBER,     --是否需要二次确认0-不需要,1-需要
                                                            I_USER             VARCHAR2,   --操作者
                                                            I_REASON           VARCHAR2,   --理由
                                                            O_FLAG OUT         NUMBER,     --返回代码：-100为失败
                                                            O_MESSAGE OUT      VARCHAR2
                                                             ) IS
--导入营销方案存储过程 
P_SQL           VARCHAR2(8000);
p_cnt           NUMBER;
p_message       varchar2(4000);   --返回信息
p_model         varchar2(100);    --存储过程名称
p_area_id       number;
p_id            number;
p_package_name  varchar2(100);    --营销方案名称
BEGIN
  

   --存储过程名称
   p_model := 'PRO_IMPORT_TRANSACTION';   
   
   if i_serial_id is null then
      O_FLAG := -100;
      O_MESSAGE := '临时表ID为空！';
      return;
   end if;
   
   select area_id,name into p_area_id,p_package_name from YW_PACKAGE_DEFINE where id = i_package_id;
   
   UPDATE yw_packageimport_temp
       SET family_id = -1,
           meno = '系统出现多个用户匹配情况'
     WHERE ROWID IN (
              SELECT   tmp.ROWID rid
                  FROM xj_school s,
                       xj_class c,
                       xj_student st,
                       xj_family f,
                       yw_packageimport_temp tmp
                 WHERE s.ID = c.school_id
                   AND c.ID = st.class_id
                   AND st.area_id = f.area_id
                   AND st.stu_sequence = f.stu_sequence
                   AND st.area_id = p_area_id
                   AND c.in_school = 1
                   AND c.class_type = 1
                   AND s.school_name = tmp.school_name
                   AND c.class_name = tmp.class_name
                   AND st.NAME = tmp.student_name
                   AND f.phone = tmp.phone
                   AND tmp.ID = i_serial_id
              GROUP BY tmp.ROWID
                HAVING COUNT (*) > 1);
   
   UPDATE yw_packageimport_temp tmp
       SET (family_id,meno) =
              (SELECT f.ID,'导入成功'
                 FROM xj_school s, xj_class c, xj_student st, xj_family f
                WHERE s.ID = c.school_id
                  AND c.ID = st.class_id
                  AND st.area_id = f.area_id
                  AND st.stu_sequence = f.stu_sequence
                  AND st.area_id = p_area_id
                  AND c.in_school = 1
                  AND c.class_type = 1
                  AND s.school_name = tmp.school_name
                  AND c.class_name = tmp.class_name
                  AND st.NAME = tmp.student_name
                  AND f.phone = tmp.phone)
     WHERE tmp.ID = i_serial_id and tmp.family_id is null;    
   
   UPDATE yw_packageimport_temp tmp
       SET family_id = -1,meno = '系统中未通匹配到相应家长数据'
    WHERE tmp.ID = i_serial_id and tmp.family_id is null;
   
   if i_open = 1 then
       --检查是否己开通套餐
       UPDATE yw_packageimport_temp tmp
           SET family_id = -1 , meno = '此家长己开通该套餐'                  
         WHERE tmp.ID = i_serial_id AND nvl(tmp.family_id,0) > 0
            and exists (SELECT pc.id
                             FROM yw_package_customer pc
                            WHERE pc.area_id = p_area_id
                              AND pc.package_id = i_package_id
                              AND pc.family_id = tmp.family_id);
           
                            
       ---UPDATE yw_packageimport_temp tmp
       --- SET family_id = -1 , meno = '非移动号码'
       ----WHERE tmp.ID = i_serial_id and f_phonetype(tmp.phone) <> 0;
        
       ---测试 验证是否属于三网电话
       UPDATE yw_packageimport_temp tmp
           SET family_id = -1 , meno = '非合法手机号码'
       WHERE tmp.ID = i_serial_id and F_ISCELLPHONE(tmp.phone)=-1;
       
       
        UPDATE yw_packageimport_temp tmp
           SET family_id = -1 , meno = '号码为空'
       WHERE tmp.ID = i_serial_id and tmp.phone is null;
       
       delete yw_packageimport_temp temp where SCHOOL_NAME is null and class_name is null and student_name is null and phone is null;
    elsif i_open = 0 then
        --检查是否己开通套餐
       UPDATE yw_packageimport_temp tmp
           SET family_id = -1 , meno = '此家长未开通该套餐'
         WHERE tmp.ID = i_serial_id AND nvl(tmp.family_id,0) > 0
            and not exists (SELECT pc.id
                             FROM yw_package_customer pc
                            WHERE pc.area_id = p_area_id
                              AND pc.package_id = i_package_id
                              AND pc.family_id = tmp.family_id);
    end if;
   
   --插入临时表
   select SERIAL_ID_SEQ.nextval into p_id from dual;
   
   insert into TEMP_TRAN_FAMILY(id,family_id)
    select p_id,family_id 
        from yw_packageimport_temp tmp 
    where ID = i_serial_id AND nvl(tmp.family_id,0) > 0;    
   
   --定制存储过程
   PRO_TRANSACTION ( p_id,
                     null, 
                     I_PACKAGE_ID, 
                     I_OPEN, 
                     I_CHARGE, 
                     I_CONFIRM, 
                     I_USER, 
                     I_REASON, 
                     O_FLAG, 
                     O_MESSAGE );
   
   O_FLAG := 100;
   O_MESSAGE := '操作成功！';
   commit;

   EXCEPTION
     WHEN OTHERS THEN
       O_FLAG := -100;
       rollback;
       select count(id) + 1 into p_cnt from err_log;
       p_message := p_model || ' 行号:' || dbms_utility.format_error_backtrace() || '  错误代码:' ||  SQLCODE || '--- SQLERRM:' || SQLERRM || P_SQL;
       insert into err_log (id,op_date,log) values (p_cnt,sysdate,p_message);
       commit;
       --PRO_SEND_MESSAGE ( g_var.getphone(), p_message );
END PRO_IMPORT_TRANSACTION;

