<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:local="*" 
			   minWidth="300" 
			   minHeight="300" initialize="{initApp()}" creationComplete="{callWrapper('open');complete();}"
			   backgroundAlpha="0" skinClass="skin.PluginSkin"
			   >
	<fx:Style source="WebAgent.css"/>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->


	</fx:Declarations>
	<fx:Script>
		<![CDATA[
		
			import flash.external.*;
			
			import mx.controls.Alert;
			import mx.core.UIComponent;
			
			import skin.PluginSkin;
			
			import mx.managers.SystemManager;
			
			
			private var qq:MovieClip;//动画
			private var ui:UIComponent = new UIComponent();
			
			private var txt:MovieClip;//动画
			private var txtUI:UIComponent = new UIComponent();
			private var isActive:Boolean = false;
			
			
			private var tempResultStr:String="";
			
			private function complete():void{
				
			}
			
			/*
			  定义外部接口，供JS调用
			 * */
			public function action(type:String):void{
				if(type=='open'&&!isActive)
				   open();
				else if(type=='close'&&isActive)
				   close();
				else if(type=='face'&&isActive)
				   face1();
				
			}
			
			
			/*
			定义外部接口，供JS调用
			* */
			public function lookup(type:String):void{
				tempResultStr=type+"：这功能你居然不清楚，其实我....";
				lookupFace();	
			}
			
			
			
			/*
			  程序初始化入口
			 * */
			public function initApp():void {
				ExternalInterface.addCallback("testAction",action);
				ExternalInterface.addCallback("lookUp",lookup);
				createUserMenus();
			}
			
			
			/*
			   调用 javascript 方法 
			*/
			public function callWrapper(type:String):void {
				var f:String = "callApp";
				
				//加载开始动画
				var m:String = ExternalInterface.call(f,type); 
				trace("callWrapper:"+type);
			}
			
			
			//打开控件
			private function open():void{
				isActive =true; 
				clearStage();
				qqHBox.addChild(ui);
				qq = new QQOpen();
				ui.addChild(qq);
				qq.x = 0;
				qq.y = 0;
				qq.addEventListener(Event.ENTER_FRAME,mcHandler);
			}
			
			
			
			//退出控件
			public function close():void{
				isActive =false;
				clearStage();
				qqHBox.addChild(ui);
				qq = new QQJump();
				ui.addChild(qq);
				qq.x = 0;
				qq.y = 0;
				qq.addEventListener(Event.ENTER_FRAME,mcHandler);
			}
			
			
			
			//控件表情
			public function face1():void{
				clearStage();
				qqHBox.addChild(ui);
				qq = new QQface1();
				ui.addChild(qq);
				qq.x = 0;
				qq.y = 0;
				qq.addEventListener(Event.ENTER_FRAME,mcHandler);
			}
			
			
			//查找表情
			public function lookupFace():void{
				clearStage();
				qqHBox.addChild(ui);
				qq = new QQLookup2();
				ui.addChild(qq);
				qq.x = 0;
				qq.y = 0;
				
				
				vBox.addChild(txtUI);
				txt = new FontT();
				txtUI.addChild(txt);
				txt.x = 0;
				txt.y = 0;
				
				qq.addEventListener(Event.ENTER_FRAME,mcHandler);
			}
			
			
			
			//控件舞台，清理当前的表情，准备加入新的
		    public function clearStage():void{
				msgLabel.text="";
				qqHBox.removeAllChildren();
				var len:uint = ui.numChildren;  
				while(len>0) {  
					ui.removeChildAt(0);
					len--;
				}
				qq = null;
				
			}
				

			
			
			//事件
			private function mcHandler(evt:Event):void{
				if(qq.currentFrame == qq.totalFrames){
					qq.removeEventListener(Event.ENTER_FRAME,mcHandler);
					//处理其它事情
					if((qq instanceof QQOpen)||(qq instanceof QQClose)){
					   msgLabel.text= qq instanceof QQOpen?"校讯通助手":(qq instanceof QQJump?"看不到我，嘻嘻":"");
					}else if(qq instanceof QQLookup2){
						msgLabel.text=tempResultStr;
					}
					qq.stop();
				}
			}
			
			
			
			//创建用户右键菜单
			private function createUserMenus():void{  
				
				var menu:ContextMenu=new ContextMenu();//创建右键菜单  
				menu.hideBuiltInItems();//隐藏内置菜单  
				
				var renameMenuItem:ContextMenuItem=new ContextMenuItem("升级....");  
				menu.customItems.push(renameMenuItem);  
				renameMenuItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,menuFaceHandler);  
				
				this.contextMenu = menu;
				qqHBox.contextMenu=menu;  
				
				//Remove ContextMenu from all SystemManager Menu items and PopUp
				MovieClip(systemManager).contextMenu = this.contextMenu.clone();
				
			}  
			
			
		    //右键菜单对应的事件
			private function menuFaceHandler(evt:ContextMenuEvent):void{  
				face1(); 
			}  
			
			
		]]>
	</fx:Script>
	
	<mx:VBox id="vBox" width="148" height="117" paddingLeft="5" backgroundAlpha="0">
		<s:RichText horizontalCenter="-7" top="8" width="124" height="24" id="msgLabel" color="#F14119" backgroundAlpha="0.0" chromeColor="#15E9DD"/>
		<mx:HBox id="qqHBox" paddingTop="5" width="127" height="59" backgroundAlpha="0" y="72">
		</mx:HBox>
	</mx:VBox>
	
</s:Application>