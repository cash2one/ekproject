<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	
	<!-- 注释配置 -->
	<!-- 扫描用标注的包 -->
	<context:component-scan base-package="qtone.xxt">
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
 
	
   <!--c3p0数据源的配置-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@61.142.114.252:1522:orcl" />
		<property name="user" value="zjxxt" />
		<property name="password" value="zj23XXT" />
		<property name="acquireIncrement" value="2" />
		<property name="acquireRetryAttempts" value="2"/>
		<property name="acquireRetryDelay" value="1000"/>
		<property name="maxIdleTime" value="60" />
		<property name="initialPoolSize" value="2"/>
		<property name="minPoolSize" value="2"/>
		<property name="maxPoolSize" value="5" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="checkoutTimeout" value="30000"/>
	</bean>


	
	<!-- 进行事务控制  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="nestedTransactionAllowed" value="true" />
	    <property name="validateExistingTransaction" value="true" />
    </bean>
	
	
	<!-- enable transaction demarcation with annotations -->
	<!-- <tx:annotation-driven />-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

	
	<!--Session工厂类的配置-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
    </bean>
 
    
    <!-- 自动加载对应的  数据访问层接口类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="qtone.xxt.dao.mapper" />
		<property name="markerInterface" value="esfw.core.framework.dao.mapper.MyBatisMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>

</beans>