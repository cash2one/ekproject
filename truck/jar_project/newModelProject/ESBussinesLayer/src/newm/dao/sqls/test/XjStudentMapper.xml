<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="newm.dao.test.XjStudentDao">

  <!-- 以下配置是系统自动生成的 -->

  <!-- 显示的记录对应的列-->
  <sql id="columns" >
	  <![CDATA[  
	     csxjstudent.id as id,csxjstudent.stu_sequence as stuSequence,csxjstudent.stu_no as stuNo,csxjstudent.name as name,csxjstudent.sex as sex,csxjstudent.birthday as birthday,csxjstudent.address as address,csxjstudent.origin as origin,csxjstudent.nation as nation,csxjstudent.origin_addr as originAddr,csxjstudent.blood_type as bloodType,csxjstudent.politics as politics,csxjstudent.ic_no as icNo,csxjstudent.home_phone as homePhone,csxjstudent.good_at as goodAt,csxjstudent.identy_no as identyNo,csxjstudent.home_macau as homeMacau,csxjstudent.born_address as bornAddress,csxjstudent.health as health,csxjstudent.ic_status as icStatus,csxjstudent.in_school_date as inSchoolDate,csxjstudent.exchange_id as exchangeId,csxjstudent.create_time as createTime,csxjstudent.call_time as callTime,csxjstudent.stu_type as stuType,csxjstudent.seat_number as seatNumber,csxjstudent.card_no as cardNo,csxjstudent.ic_no_2 as icNo2,csxjstudent.last_update_timestamp as lastUpdateTimestamp,csxjstudent.sx_userid as sxUserid,csxjstudent.sx_psw as sxPsw,csxjstudent.comments as comments,csxjstuclass.school_id as schoolId,csxjstuclass.class_id as classId,xjschool.school_name as schoolName,xjclass.class_name as className  ]]>
  </sql>
  
  
  <!-- 列表对应的查询条件组合  -->
  <sql id="queryOptions">
       <where>
            	  <if test="birthday1!=null"> AND csxjstudent.birthday &gt; #{birthday1}</if><if test="birthday2!=null"> AND csxjstudent.birthday &lt; #{birthday2}</if>
            	  <if test="createTime1!=null"> AND csxjstudent.create_time &gt; #{createTime1}</if><if test="createTime2!=null"> AND csxjstudent.create_time &lt; #{createTime2}</if>
            	  <if test="sex>=0"> AND csxjstudent.sex = #{sex}</if>
            	  <if test="bornAddress!=null"> AND csxjstudent.born_address like #{bornAddress}</if>
            	  <if test="icNo2!=null"> AND csxjstudent.ic_no_2 like #{icNo2}</if>
            	  <if test="callTime>=0"> AND csxjstudent.call_time = #{callTime}</if>
            	  <if test="stuSequence!=null"> AND csxjstudent.stu_sequence like #{stuSequence}</if>
            	  <if test="inSchoolDate1!=null"> AND csxjstudent.in_school_date &gt; #{inSchoolDate1}</if><if test="inSchoolDate2!=null"> AND csxjstudent.in_school_date &lt; #{inSchoolDate2}</if>
            	  <if test="sxUserid!=null"> AND csxjstudent.sx_userid like #{sxUserid}</if>
            	  <if test="homePhone!=null"> AND csxjstudent.home_phone like #{homePhone}</if>
            	  <if test="cardNo!=null"> AND csxjstudent.card_no like #{cardNo}</if>
            	  <if test="politics>=0"> AND csxjstudent.politics = #{politics}</if>
            	  <if test="sxPsw!=null"> AND csxjstudent.sx_psw like #{sxPsw}</if>
            	  <if test="name!=null"> AND csxjstudent.name like #{name}</if>
            	  <if test="exchangeId!=null"> AND csxjstudent.exchange_id like #{exchangeId}</if>
            	  <if test="icStatus>=0"> AND csxjstudent.ic_status = #{icStatus}</if>
            	  <if test="homeMacau>=0"> AND csxjstudent.home_macau = #{homeMacau}</if>
            	  <if test="origin!=null"> AND csxjstudent.origin like #{origin}</if>
            	  <if test="stuType>=0"> AND csxjstudent.stu_type = #{stuType}</if>
            	  <if test="icNo!=null"> AND csxjstudent.ic_no like #{icNo}</if>
            	  <if test="health!=null"> AND csxjstudent.health like #{health}</if>
            	  <if test="nation>=0"> AND csxjstudent.nation = #{nation}</if>
            	  <if test="identyNo!=null"> AND csxjstudent.identy_no like #{identyNo}</if>
            	  <if test="bloodType>=0"> AND csxjstudent.blood_type = #{bloodType}</if>
            	  <if test="goodAt!=null"> AND csxjstudent.good_at like #{goodAt}</if>
            	  <if test="address!=null"> AND csxjstudent.address like #{address}</if>
            	  <if test="stuNo!=null"> AND csxjstudent.stu_no like #{stuNo}</if>
            	  <if test="lastUpdateTimestamp1!=null"> AND csxjstudent.last_update_timestamp &gt; #{lastUpdateTimestamp1}</if><if test="lastUpdateTimestamp2!=null"> AND csxjstudent.last_update_timestamp &lt; #{lastUpdateTimestamp2}</if>
            	  <if test="seatNumber>=0"> AND csxjstudent.seat_number = #{seatNumber}</if>
            	  <if test="comments!=null"> AND csxjstudent.comments like #{comments}</if>
            	  <if test="originAddr!=null"> AND csxjstudent.origin_addr like #{originAddr}</if>         
                  <if test="schoolName!=null"> AND xjschool.school_name like #{schoolName}</if>         
                  <if test="classId>=0"> AND csxjstuclass.class_id = #{classId}</if>         
                  <if test="className!=null"> AND xjclass.class_name like #{className}</if>         
                  <if test="schoolId>=0"> AND csxjstuclass.school_id = #{schoolId}</if> 
        </where> 
  </sql>



  <!-- 列表查询对应的排序选项  -->
  <sql id="orderControl">
       <if test="orderList!=null">
		  <trim prefix="ORDER BY" prefixOverrides=",">
				<foreach collection="orderList" item="order" open=""  separator="," close="" >
				   <choose> 
				       <when test="order.columnName=='birthday'"> csxjstudent.birthday ${order.type} </when> 
				       <when test="order.columnName=='createTime'"> csxjstudent.create_time ${order.type} </when> 
				       <when test="order.columnName=='sex'"> csxjstudent.sex ${order.type} </when> 
				       <when test="order.columnName=='bornAddress'"> csxjstudent.born_address ${order.type} </when> 
				       <when test="order.columnName=='icNo2'"> csxjstudent.ic_no_2 ${order.type} </when> 
				       <when test="order.columnName=='callTime'"> csxjstudent.call_time ${order.type} </when> 
				       <when test="order.columnName=='stuSequence'"> csxjstudent.stu_sequence ${order.type} </when> 
				       <when test="order.columnName=='inSchoolDate'"> csxjstudent.in_school_date ${order.type} </when> 
				       <when test="order.columnName=='sxUserid'"> csxjstudent.sx_userid ${order.type} </when> 
				       <when test="order.columnName=='homePhone'"> csxjstudent.home_phone ${order.type} </when> 
				       <when test="order.columnName=='cardNo'"> csxjstudent.card_no ${order.type} </when> 
				       <when test="order.columnName=='politics'"> csxjstudent.politics ${order.type} </when> 
				       <when test="order.columnName=='sxPsw'"> csxjstudent.sx_psw ${order.type} </when> 
				       <when test="order.columnName=='name'"> csxjstudent.name ${order.type} </when> 
				       <when test="order.columnName=='exchangeId'"> csxjstudent.exchange_id ${order.type} </when> 
				       <when test="order.columnName=='icStatus'"> csxjstudent.ic_status ${order.type} </when> 
				       <when test="order.columnName=='homeMacau'"> csxjstudent.home_macau ${order.type} </when> 
				       <when test="order.columnName=='origin'"> csxjstudent.origin ${order.type} </when> 
				       <when test="order.columnName=='stuType'"> csxjstudent.stu_type ${order.type} </when> 
				       <when test="order.columnName=='icNo'"> csxjstudent.ic_no ${order.type} </when> 
				       <when test="order.columnName=='health'"> csxjstudent.health ${order.type} </when> 
				       <when test="order.columnName=='nation'"> csxjstudent.nation ${order.type} </when> 
				       <when test="order.columnName=='identyNo'"> csxjstudent.identy_no ${order.type} </when> 
				       <when test="order.columnName=='bloodType'"> csxjstudent.blood_type ${order.type} </when> 
				       <when test="order.columnName=='goodAt'"> csxjstudent.good_at ${order.type} </when> 
				       <when test="order.columnName=='address'"> csxjstudent.address ${order.type} </when> 
				       <when test="order.columnName=='stuNo'"> csxjstudent.stu_no ${order.type} </when> 
				       <when test="order.columnName=='lastUpdateTimestamp'"> csxjstudent.last_update_timestamp ${order.type} </when> 
				       <when test="order.columnName=='seatNumber'"> csxjstudent.seat_number ${order.type} </when> 
				       <when test="order.columnName=='comments'"> csxjstudent.comments ${order.type} </when> 
				       <when test="order.columnName=='originAddr'"> csxjstudent.origin_addr ${order.type} </when>   
				       <when test="order.columnName=='schoolName'"> xjschool.school_name ${order.type} </when>   
				       <when test="order.columnName=='classId'"> csxjstuclass.class_id ${order.type} </when>   
				       <when test="order.columnName=='className'"> xjclass.class_name ${order.type} </when>   
				       <when test="order.columnName=='schoolId'"> csxjstuclass.school_id ${order.type} </when>
                       
				       <when test="order.columnName=='id'"> csxjstudent.id  ${order.type}  </when> 
				       
				  </choose>
			 </foreach>
		 </trim>
	   </if>
  </sql>

 
 
  <!-- 列表查询对应的表关系SQL  -->
  <sql id="querySqlMain">
	 <![CDATA[   
	      ${daoAbb}_XJ_STUDENT  csxjstudent LEFT JOIN ${daoAbb}_XJ_STU_CLASS csxjstuclass ON csxjstudent.STU_SEQUENCE = csxjstuclass.STU_SEQUENCE LEFT JOIN XJ_SCHOOL xjschool ON csxjstuclass.SCHOOL_ID = xjschool.ID LEFT JOIN XJ_CLASS xjclass ON csxjstuclass.CLASS_ID = xjclass.ID  ]]>
  </sql>

  
   
   <!-- 根据ID查询记录 -->
   <select id="loadById" resultType="newm.dao.entity.test.XjStudentEntity">
	     SELECT  <include refid="columns"/>              
		       FROM <include refid="querySqlMain"/>
			   where csxjstudent.ID=#{id}
   </select>
   


   <!-- 返回记录总数的语句 -->
   <select id="count" resultType="int">
         SELECT count(*) num   
			  FROM  <include refid="querySqlMain"/>
				    <include refid="queryOptions"/> 
   </select>
   
   
    <!-- 分页查询对应的记录 -->
   <select id="query" resultType="newm.dao.entity.test.XjStudentEntity">
	      SELECT <include refid="columns"/>   
		      FROM <include refid="querySqlMain"/>
		      <include refid="queryOptions"/>
		      <include refid="orderControl"/>
   </select>


   <!-- 新增记录 -->
   <insert id="insert" useGeneratedKeys="false" >
       
       <selectKey resultType="long" order="AFTER" keyProperty="id">
	       <![CDATA[    SELECT ${daoAbb}_XJ_STUDENT_SEQ.currval FROM  DUAL    ]]> 
	   </selectKey> 
             INSERT INTO ${daoAbb}_XJ_STUDENT (birthday,create_time,sex,born_address,ic_no_2,call_time,stu_sequence,in_school_date,sx_userid,home_phone,card_no,politics,sx_psw,name,exchange_id,ic_status,home_macau,origin,stu_type,ic_no,health,nation,identy_no,blood_type,good_at,address,stu_no,last_update_timestamp,seat_number,comments,origin_addr)
             VALUES(#{birthday,jdbcType=DATE},#{createTime,jdbcType=DATE},#{sex,jdbcType=NUMERIC},#{bornAddress,jdbcType=VARCHAR},#{icNo2,jdbcType=VARCHAR},#{callTime,jdbcType=NUMERIC},#{stuSequence,jdbcType=VARCHAR},#{inSchoolDate,jdbcType=DATE},#{sxUserid,jdbcType=VARCHAR},#{homePhone,jdbcType=VARCHAR},#{cardNo,jdbcType=VARCHAR},#{politics,jdbcType=NUMERIC},#{sxPsw,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{exchangeId,jdbcType=VARCHAR},#{icStatus,jdbcType=NUMERIC},#{homeMacau,jdbcType=NUMERIC},#{origin,jdbcType=VARCHAR},#{stuType,jdbcType=NUMERIC},#{icNo,jdbcType=VARCHAR},#{health,jdbcType=VARCHAR},#{nation,jdbcType=NUMERIC},#{identyNo,jdbcType=VARCHAR},#{bloodType,jdbcType=NUMERIC},#{goodAt,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{stuNo,jdbcType=VARCHAR},#{lastUpdateTimestamp,jdbcType=DATE},#{seatNumber,jdbcType=NUMERIC},#{comments,jdbcType=VARCHAR},#{originAddr,jdbcType=VARCHAR})  
            
   </insert>
   
   
   
   <!-- 更新记录 -->       
   <update id="update" >
           UPDATE ${daoAbb}_XJ_STUDENT 
           <set>
            <![CDATA[ 
                birthday=#{birthday,jdbcType=DATE},
                create_time=#{createTime,jdbcType=DATE},
                sex=#{sex,jdbcType=NUMERIC},
                born_address=#{bornAddress,jdbcType=VARCHAR},
                ic_no_2=#{icNo2,jdbcType=VARCHAR},
                call_time=#{callTime,jdbcType=NUMERIC},
                stu_sequence=#{stuSequence,jdbcType=VARCHAR},
                in_school_date=#{inSchoolDate,jdbcType=DATE},
                sx_userid=#{sxUserid,jdbcType=VARCHAR},
                home_phone=#{homePhone,jdbcType=VARCHAR},
                card_no=#{cardNo,jdbcType=VARCHAR},
                politics=#{politics,jdbcType=NUMERIC},
                sx_psw=#{sxPsw,jdbcType=VARCHAR},
                name=#{name,jdbcType=VARCHAR},
                exchange_id=#{exchangeId,jdbcType=VARCHAR},
                ic_status=#{icStatus,jdbcType=NUMERIC},
                home_macau=#{homeMacau,jdbcType=NUMERIC},
                origin=#{origin,jdbcType=VARCHAR},
                stu_type=#{stuType,jdbcType=NUMERIC},
                ic_no=#{icNo,jdbcType=VARCHAR},
                health=#{health,jdbcType=VARCHAR},
                nation=#{nation,jdbcType=NUMERIC},
                identy_no=#{identyNo,jdbcType=VARCHAR},
                blood_type=#{bloodType,jdbcType=NUMERIC},
                good_at=#{goodAt,jdbcType=VARCHAR},
                address=#{address,jdbcType=VARCHAR},
                stu_no=#{stuNo,jdbcType=VARCHAR},
                last_update_timestamp=#{lastUpdateTimestamp,jdbcType=DATE},
                seat_number=#{seatNumber,jdbcType=NUMERIC},
                comments=#{comments,jdbcType=VARCHAR},
                origin_addr=#{originAddr,jdbcType=VARCHAR},   ]]>
	   </set>
	       WHERE ID = #{id}
   </update> 
   


   
   <!-- 删除记录 -->
   <delete id="delete">
          DELETE FROM ${daoAbb}_XJ_STUDENT
          WHERE ID in    
          <foreach collection="ids" item="id" open="("  separator="," close=")" >
                #{id}
          </foreach>
   </delete>
  
   
   <!-- 以下是自定义的配置信息 -->
   
   
   
   

</mapper>



